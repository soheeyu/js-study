{
	// Place your Vuejs workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Vue Instance": {
		"prefix": "vuei",
		"body": [
			"//import axios from /'axios/';",
			"",
			"new Vue({",
			"    /* edtmc^2w */",
			"    el: \"${1:}\",",
			"    data: {",
			"",
			"    },",
			"    //template: ``,",
			"    methods: {",
			"",
			"    },",
			"    components: { }, ",
			"    computed: {",
			"",
			"    },",
			"    watch: {",
			"",
			"    },",
			"    mounted: function() {",
			"        console.log(\"mounted\");",
			"    },",
			"    updated: function() {",
			"        console.log(\"updated\");",
			"    },",
			"});"
		],
		"description": "Vue Instance"
	},
	"Vue Component": {
		"prefix": "vuec",
		"body": [
			"Vue.component(\"${1:${TM_FILENAME_BASE}}\", { ",
			"    /* pdtmc^2w */",
			"    props: [] ,",
			"    data: function() {",
			"        return { }",
			"    },",
			"    template: `",
			"",
			"    `,",
			"    methods: {",
			"",
			"    },",
			"    components: { },",
			"    computed: {",
			"",
			"    },",
			"    watch: {",
			"",
			"    },",
			"});"
		],
		"description": "Vue Component"
	},
	"Vue script": {
		"prefix": "vuescript",
		"body": [
			"<!-- vue 플러그인 임포트   -->",
			"<script src=\"https://unpkg.com/vue@2.5.16/dist/vue.js\"> /* vue 플러그인 임포트 */</script>",
			"<script>",
			"</script>"
		],
		"description": "Vue script"
	},
	"React Class Component": {
		"prefix": "rcc",
		"body": [
			"//import React, { Component } from 'react'",
			"//import ReactDOM from 'react-dom'",
			"",
			"console.log(React)",
			"console.log(ReactDOM)",
			"",
			"class ${1:${TM_FILENAME_BASE}} extends React.Component {",
			"",
			"    static defaultProps = {  /*  props의 디폴트 값 설정 */  } ",
			"    static propsTypes = {  /* props의 프로퍼티 타입 설정 */ } ",
			"    state = {",
			"",
			"    }",
			"    constructor(props) {",
			"        super()",
			"        // this 바인딩",
			"    }",
			"    componentDidMount() {",
			"        // 마운트 완료 후에  : 페이지 load 될 때 한번",
			"    }",
			"    componentDidUpdate(prevProps, prevState) {",
			"        // 업데이트 완료 후에 : 여러번, state 가 변경될 때마다",
			"    }",
			"    componentWillUnmount() {",
			"        // 언마운트 완료 후에 : 페이지 unload 될 때 한번",
			"    }",
			"    handler = (event)=>{",
			"        // 이벤트 핸들러는 화살표 함수로 만들면 this를 bind() 생략해도 된다",
			"        console.log(event.target)//",
			"    }",
			"    render() {",
			"        return (",
			"            <div>",
			"                ${2:}",
			"            </div>",
			"        )",
			"    }",
			"}",
			"",
			"//export default ${1:${TM_FILENAME_BASE}}"
		],
		"description": "React Class Component"
	},
	"React Functional Component": {
		"prefix": "rfc",
		"body": [
			"//import React, { useState, useEffect, useRef, useReducer, useContext, useMemo, useCallback, useImperativeHandle, useLayoutEffect, useDebugValue } from 'react'",
			"//import ReactDOM from 'react-dom'",
			"",
			"console.log(React)",
			"console.log(React.useState) // 상태값",
			"console.log(React.useEffect) // 생명주기",
			"console.log(React.useRef) // 속성값",
			"console.log(ReactDOM)",
			"",
			"const ${1:${TM_FILENAME_BASE}} = (props) => {",
			"    //const [user, setUser] = React.useState({ userId: 0, name: '', age: 0, })",
			"    return (",
			"        <div>",
			"            ${2:}",
			"        </div>",
			"    )",
			"}",
			"",
			"//export default ${1:${TM_FILENAME_BASE}}"
		],
		"description": "React Functional Component"
	},
	"React script": {
		"prefix": "reactscript",
		"body": [
			"<!-- react 플러그인 include   -->",
			"<!-- 주의: 사이트를 배포할 때는 'development.js'를 'production.min.js'로 대체하세요. -->",
			"<script src='https://cdnjs.cloudflare.com/ajax/libs/react/16.12.0/umd/react.development.js'> /* import { React} from 'react'; */</script>",
			"<script src='https://cdnjs.cloudflare.com/ajax/libs/react-dom/16.11.0/umd/react-dom.development.js'>/* import { ReactDOM } from 'react-dom'; */</script>",
			"<script src='https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.js'>/* JSX를 자바스크립트로 변환 */</script>",
			"<script type='text/babel'>",
			"</script>"
		],
		"description": "React script"
	}
}